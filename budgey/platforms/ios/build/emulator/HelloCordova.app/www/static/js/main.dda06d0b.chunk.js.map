{"version":3,"sources":["components/Home.js","components/Login.js","components/Header.js","components/register/UserRegister.js","components/register/BudgetRegister.js","components/Plaid.js","components/register/PlaidRegister.js","components/register/ConfirmRegister.js","components/Register.js","components/addTransaction/NewTransaction.js","components/addTransaction/AddTransactionOption.js","components/Navbar.js","components/GoalForm.js","components/CreateGoal.js","components/HealthBar.js","components/CoinCount.js","components/DashboardProfile.js","components/SavedGoal.js","components/ProgressBar.js","components/TopSpending.js","components/MonthlyProgressBar.js","components/Dashboard.js","components/Onboarding/Onboarding1.js","components/Onboarding/Onboarding2.js","components/Onboarding/Onboarding3.js","components/Onboarding/Onboarding4.js","components/Onboarding.js","components/MonthOptions.js","components/SingleTransaction.js","components/CategoryTransaction.js","components/Piechart.js","components/Barchart.js","components/YearOptions.js","components/Budgetchart.js","components/Analytics.js","components/EditProfile.js","components/EditBudget.js","components/Profile.js","components/Store.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","className","src","to","Button","variant","color","Login","useState","email","password","user","setUser","loginError","setLoginError","history","useHistory","handleChange","event","persist","prev","target","name","value","onSubmit","preventDefault","axios","post","withCredentials","then","res","data","logged_in","handleLogin","push","status","catch","err","console","log","TextField","label","maxLength","margin","type","onChange","required","id","onClick","Header","UserRegister","BudgetRegister","lable","Plaid","getStatus","style","clientName","env","product","publicKey","onSuccess","token","metadata","PlaidRegister","ConfirmRegister","submit","error","class","Register","userName","password_confirmation","newUser","setNewUser","budget","setBudget","setError","React","activeStep","setActiveStep","onChangeIndex","index","indexLatest","prevActiveStep","goal","goal_type","amount","parseInt","start_date","Date","now","end_date","response","MobileStepper","steps","position","NewTransaction","Dialog","onClose","onChangeOpenStatus","transaction","list","aria-labelledby","open","openStatus","DialogTitle","autoFocus","transactionData","onInputAmount","location","onInputLocation","utils","DateFnsUtils","disableToolbar","inputProps","readOnly","format","transaction_date","onInputDate","KeyboardButtonProps","InputLabel","Select","category","onInputCategory","MenuItem","DialogActions","changeNavbarStatus","Axios","resetValues","AddTransactionOption","setOpenStatus","setTransactionData","selectedFile","setSelectedFile","fileInputRef","createRef","useEffect","openAddTransaction","formData","FormData","append","textRes","responses","fullTextAnnotation","text","includes","Number","split","filter","item","slice","changeOpenStatus","List","ListItem","current","click","accept","display","ref","e","files","useStyles","makeStyles","root","width","Navbar","setOpenAddTransaction","setValue","classes","BottomNavigation","newValue","bottom","backgroundColor","BottomNavigationAction","icon","GoalForm","formFields","setFormFields","handleFormFieldChange","handleDateChange","date","moment","onSave","setRefreshGoals","refreshGoals","setActive","active","helperText","minDate","getTime","size","CreateGoal","Card","CardContent","newState","HealthBar","completed","setCompleted","hp","LinearProgress","CoinCount","coins","setCoins","height","DashboardProfile","minusHP","resetHP","updateCoins","SavedGoal","goalClicked","setGoalClicked","startDate","endDate","goalEdit","setGoalEdit","editGoal","put","goals","bgColor","dailyTarget","toLocaleString","month","day","year","CardActions","onDelete","key","ProgressBar","total","setTotal","savingGoal","setSavingGoal","currentMonth","get","toSave","totalSpending","totalSaving","Progress","multi","bar","TopSpending","topThree","setTopThree","paddingTop","paddingBottom","marginBottom","Table","aria-label","TableBody","length","map","row","TableRow","padding","TableCell","component","scope","toFixed","MonthlyProgressBar","percentMonthlySpending","spending","checkMonthlySpending","Dashboard","logInStatus","checkLogInStatus","setGoals","progressActiveStep","setProgressActiveStep","findGoalIndexById","arr","i","newGoal","setNewGoal","WebkitOverflowScrolling","delete","updatedGoals","splice","deleteGoal","target_per_day","pathname","Onboarding1","Onboarding2","Onboarding3","Onboarding4","Onboarding","months","MonthOptions","setMonth","setCategory","isCurrentMonth","FormControl","labelId","selected","SingleTransaction","transactionDate","elevation","CategoryTransaction","pieMonth","allTransactions","setAllTransactions","page","setPage","transactionsPerPage","setTransactionsPerPage","filteredTransaction","TablePagination","rowsPerPageOptions","count","rowsPerPage","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","labelRowsPerPage","allTransaction","Piechart","transactions","setTransactions","setMonthTotal","setPieMonth","Highcharts","chart","renderTo","title","verticalAlign","floating","fontSize","plotOptions","pie","allowPointSelect","cursor","point","events","dataLabels","enabled","innerSize","showInLegend","legend","borderWidth","align","layout","itemMarginTop","itemMarginBottom","itemStyle","lineHeight","useHTML","labelFormatter","this","y","colors","series","Barchart","bar1Month","setBar1Month","bar2Month","setBar2Month","transactions1","setTransactions1","transactions2","setTransactions2","getChartdata","dataSet","forEach","ifTwoCharts","xAxis","categories","crosshair","yAxis","min","tooltip","headerFormat","pointFormat","footerFormat","shared","column","pointPadding","years","YearOptions","setYear","isCurrentYear","Budgetchart","budgetData","setbudgetData","compareMonthlyTransactions","setCompareMonthlyTransactions","Object","keys","monthData","values","negativeData","positiveData","reversed","labels","step","stacking","Analytics","setChart","chartDropdown","EditProfile","updatedFields","setUpdatedFields","closeEditProfile","placeholder","field","result","success","setLoginStatus","alert","updateBudgetInfo","setUpdateBudgetInfo","closeEditBudget","Profile","openEdit","setOpenEdit","openBudget","setOpenBudget","logOutClick","Store","budgetAchieved","subtractCoinsAddHP","images","App","setLogInStatus","lock","imageArray","countArray","handleLogout","num_times_bud_met","indexOf","path","render","amt","updateHealthAndCoins","Boolean","window","hostname","match","startApp","ReactDOM","document","getElementById","cordova","addEventListener","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dda06d0b.chunk.js","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport \"../styles/Home.sass\";\n\nexport default function Home(props) {\n  return (\n    <div className=\"Home\">\n      <h1 className=\"title\">Budgey</h1>\n      <img src=\"pig.png\" className=\"logo\"></img>\n      <Link to=\"/login\">\n        <Button variant=\"contained\" color=\"primary\" className=\"button\">\n          login\n        </Button>\n      </Link>\n      <Link to=\"/register\">\n        <Button variant=\"contained\" color=\"\" className=\"button\">\n          Register\n        </Button>\n      </Link>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Link, useHistory } from \"react-router-dom\";\nimport \"../styles/Login.sass\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nexport default function Login(props) {\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [loginError, setLoginError] = useState(\"\");\n  const history = useHistory();\n  const handleChange = event => {\n    event.persist();\n    setUser(prev => ({ ...prev, [event.target.name]: event.target.value }));\n  };\n\n  const handleSubmit = () => {\n    setLoginError(\"\");\n    axios\n      .post(\n        \"http://localhost:3000/sessions\",\n        {\n          user: { email: user.email, password: user.password }\n        },\n        { withCredentials: true }\n      )\n      .then(res => {\n        if (res.data.logged_in) {\n          props.handleLogin(res.data.user[0]);\n          history.push(\"/home\");\n        } else if (res.data.status === 401) {\n          setLoginError(\"Please check your email and password\");\n        }\n      })\n      .catch(err => {\n        console.log(\"login error\", err);\n      });\n  };\n\n  return (\n    <div className=\"Login\">\n      <h1 className=\"title\">Login</h1>\n      <form\n        onSubmit={event => {\n          event.preventDefault();\n          handleSubmit();\n        }}\n      >\n        <TextField\n          label=\"Email\"\n          maxLength=\"20\"\n          margin=\"normal\"\n          className=\"textinput\"\n          type=\"email\"\n          name=\"email\"\n          onChange={event => handleChange(event)}\n          required\n        />\n        <TextField\n          label=\"Password\"\n          margin=\"normal\"\n          className=\"textinput\"\n          type=\"password\"\n          name=\"password\"\n          onChange={event => handleChange(event)}\n          required\n        />\n        <p id=\"error\">{loginError}</p>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"\"\n          className=\"login button\"\n        >\n          Login\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"\"\n          className=\"button\"\n          onClick={() => history.push(\"/register\")}\n        >\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../styles/Header.sass\";\nconst Header = () => {\n  return (\n    <div className=\"header-contents\">\n      <img src=\"pig.png\" className=\"avatar-piggy\"></img>\n      <span className=\"header-title\">Budgey</span>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\n\nexport default function UserRegister(props) {\n  return (\n    <div>\n      <h1 className=\"title\">Get Started</h1>\n      <form className=\"userForm\">\n        <TextField\n          label=\"Name\"\n          type=\"text\"\n          name=\"userName\"\n          className=\"textinput\"\n          onChange={props.onChange}\n          required\n        />\n        <TextField\n          type=\"email\"\n          name=\"email\"\n          className=\"textinput\"\n          onChange={props.onChange}\n          label=\"Email\"\n          required\n        />\n\n        <TextField\n          type=\"password\"\n          name=\"password\"\n          className=\"textinput\"\n          onChange={props.onChange}\n          label=\"Password\"\n          required\n        />\n        <TextField\n          type=\"password\"\n          name=\"password_confirmation\"\n          className=\"textinput\"\n          onChange={props.onChange}\n          label=\"Confirm Password\"\n          required\n        />\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\n\nexport default function BudgetRegister(props) {\n  return (\n    <div className=\"BudgetRegister\">\n      <h1 className=\"title\">Budget</h1>\n      <p>What is your budget per month?</p>\n      <TextField\n        className=\"textinput\"\n        lable=\"Amount\"\n        type=\"text\"\n        name=\"amount\"\n        onChange={props.onChange}\n        required\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport PlaidLink from \"react-plaid-link\";\n\nexport default function Plaid() {\n  const [status, getStatus] = useState(\"\");\n  const handleOnSuccess = (token, metadata) => {\n    getStatus(\"success\");\n  };\n\n  return (\n    <div>\n      <PlaidLink\n        className=\"link-bank\"\n        style={{ margin: \"30vh 0\" }}\n        clientName=\"Your app name\"\n        env=\"sandbox\"\n        product={[\"auth\", \"transactions\"]}\n        publicKey=\"f5d36ce3fa8cfc7f7ea122094b9505\"\n        onSuccess={handleOnSuccess}\n      >\n        Connect to your bank\n      </PlaidLink>\n      {status ? <p>Success!</p> : \"\"}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Plaid from \"../Plaid\";\n\nexport default function PlaidRegister(props) {\n  return (\n    <div className=\"PlaidRegister\">\n      <Plaid />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function ConfirmRegister(props) {\n  return (\n    <div className=\"ConfirmRegister\">\n      <h1 className=\"title\">Confirm</h1>\n      <p>Click Budgey the Pig to submit</p>\n      <img src=\"pig.png\" onClick={props.submit}></img>\n      {props.error && <p class=\"error-message\">{props.error}</p>}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport Header from \"./Header\";\n\nimport { useHistory } from \"react-router-dom\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\nimport UserRegister from \"./register/UserRegister\";\nimport BudgetRegister from \"./register/BudgetRegister\";\nimport PlaidRegister from \"./register/PlaidRegister\";\nimport ConfirmRegister from \"./register/ConfirmRegister\";\n\nimport \"../styles/Register.sass\";\n\nexport default function Register(props) {\n  const [newUser, setNewUser] = useState({\n    userName: \"\",\n    email: \"\",\n    password: \"\",\n    password_confirmation: \"\"\n  });\n  const [budget, setBudget] = useState(0);\n  const [error, setError] = useState(\"\");\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNextSwipe = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBackSwipe = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const history = useHistory();\n\n  const handleChange = event => {\n    event.persist();\n    setNewUser(prev => ({ ...prev, [event.target.name]: event.target.value }));\n  };\n\n  const handleSubmit = event => {\n    axios\n      .post(\n        \"http://localhost:3000/registrations\",\n        {\n          user: {\n            name: newUser.userName,\n            email: newUser.email,\n            password: newUser.password,\n            password_confirmation: newUser.password_confirmation\n          }\n        },\n        { withCredentials: true }\n      )\n      .then(res => {\n        props.handleLogin(res.data.user[0]);\n        axios\n          .post(\n            \"http://localhost:3000/goals\",\n            {\n              goal: {\n                goal_type: \"budget\",\n                amount: parseInt(budget),\n                name: \"budget\",\n                start_date: new Date(Date.now()),\n                end_date: \"null\"\n              }\n            },\n            { withCredentials: true }\n          )\n          .then(res => {\n            history.push(\"/onboarding\");\n          });\n      })\n      .catch(err => {\n        if (err) {\n          if (err.response.status === 422) {\n            setError(\"Please ensure you have filled out all text fields\");\n          } else if (err.response.status === 500) {\n            setError(\n              \"Sorry, there has been an issue. Please enter a different email and try again\"\n            );\n          }\n        }\n      });\n  };\n\n  return (\n    <div className=\"Register\">\n      <Header />\n      <div className=\"swipe-card\">\n        <SwipeableViews\n          onChangeIndex={(index, indexLatest) => {\n            index > indexLatest ? handleNextSwipe() : handleBackSwipe();\n          }}\n        >\n          <UserRegister onChange={handleChange} />\n          <BudgetRegister onChange={event => setBudget(event.target.value)} />\n          <PlaidRegister />\n          <ConfirmRegister submit={handleSubmit} error={error} />\n        </SwipeableViews>\n        <MobileStepper\n          className=\"register-stepper\"\n          variant=\"dots\"\n          steps={4}\n          position=\"static\"\n          activeStep={activeStep}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  TextField,\n  Select,\n  InputLabel,\n  MenuItem,\n  Button,\n  DialogActions\n} from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Axios from \"axios\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\n\nexport default function NewTransaction(props) {\n  function triggerNewTransactionPost() {\n    Axios.post(\n      \"http://localhost:3000/transactions\",\n      {\n        amount: props.transactionData.amount,\n        location: props.transactionData.location,\n        category: props.transactionData.category,\n        transaction_date: props.transactionData.transaction_date\n      },\n      { withCredentials: true }\n    );\n  }\n  return (\n    <div>\n      <Dialog\n        onClose={() =>\n          props.onChangeOpenStatus({ transaction: false, list: true })\n        }\n        aria-labelledby=\"simple-dialog-title\"\n        open={props.openStatus.transaction}\n      >\n        <DialogTitle id=\"simple-dialog-title\">New Transaction</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            label=\"Amount\"\n            type=\"number\"\n            value={props.transactionData.amount}\n            onChange={props.onInputAmount}\n          />\n          <br />\n          <TextField\n            margin=\"dense\"\n            label=\"Location\"\n            type=\"Text\"\n            value={props.transactionData.location}\n            onChange={props.onInputLocation}\n          />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              disableToolbar\n              inputProps={{ readOnly: true }}\n              format=\"MM/dd/yyyy\"\n              margin=\"normal\"\n              label=\"Date picker inline\"\n              value={props.transactionData.transaction_date}\n              onChange={props.onInputDate}\n              KeyboardButtonProps={{\n                \"aria-label\": \"change date\"\n              }}\n            />\n          </MuiPickersUtilsProvider>\n          <InputLabel>Category</InputLabel>\n\n          <Select\n            value={props.transactionData.category}\n            onChange={props.onInputCategory}\n          >\n            <MenuItem value=\"Shopping\">Shopping</MenuItem>\n            <MenuItem value=\"Food and Drink\">Food and Drink</MenuItem>\n            <MenuItem value=\"Recreation\">Recreation</MenuItem>\n            <MenuItem value=\"Rideshare\">Rideshare</MenuItem>\n          </Select>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              props.changeNavbarStatus();\n              props.onChangeOpenStatus({ transaction: false, list: false });\n              triggerNewTransactionPost();\n              props.resetValues();\n            }}\n          >\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport NewTransaction from \"./NewTransaction\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Axios from \"axios\";\n\nexport default function AddTransactionOption(props) {\n  const [openStatus, setOpenStatus] = useState({\n    list: false,\n    transaction: false\n  });\n  const [transactionData, setTransactionData] = useState({\n    amount: \"\",\n    location: \"\",\n    category: \"\",\n    transaction_date: new Date(Date.now())\n  });\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  let fileInputRef = React.createRef();\n\n  useEffect(() => {\n    setOpenStatus({ ...openStatus, list: props.openAddTransaction });\n  }, [props.openAddTransaction]);\n\n  useEffect(() => {\n    setOpenStatus({ ...openStatus, list: false });\n    let formData = new FormData();\n    formData.append(\"image\", selectedFile);\n    Axios.post(\"http://localhost:3000/image_recognition\", formData).then(\n      res => {\n        let textRes = res.data.responses[0].fullTextAnnotation.text;\n        let amount = 0;\n        if (textRes.includes(\"McDonald's\")) {\n          amount = Number(\n            textRes\n              .split(/(\\r\\n|\\n|\\r)/gm)\n              .filter(item => item.includes(\"$\") && item.includes(\".\"))[0]\n              .slice(2)\n          );\n        }\n        setTransactionData({\n          ...transactionData,\n          amount: amount,\n          location: \"McDonald's\",\n          category: \"Food\",\n          transaction_date: new Date(Date.now())\n        });\n        setOpenStatus({ ...openStatus, list: false, transaction: true });\n      }\n    );\n  }, [selectedFile]);\n\n  return (\n    <div>\n      <Dialog\n        autoFocus=\"true\"\n        onClose={() => props.changeOpenStatus(false)}\n        aria-labelledby=\"simple-dialog-title\"\n        open={openStatus.list}\n      >\n        <DialogTitle id=\"simple-dialog-title\">Add Transaction</DialogTitle>\n        <List>\n          <ListItem onClick={() => fileInputRef.current.click()}>\n            Take Picture\n            <input\n              type=\"file\"\n              name=\"image\"\n              accept=\"image/*\"\n              style={{ display: \"none\" }}\n              ref={fileInputRef}\n              onChange={e => setSelectedFile(e.target.files[0])}\n            ></input>\n          </ListItem>\n          <ListItem\n            onClick={() =>\n              setOpenStatus({ ...openStatus, transaction: true, list: false })\n            }\n          >\n            Enter Manually\n          </ListItem>\n        </List>\n      </Dialog>\n      <NewTransaction\n        onChangeOpenStatus={data =>\n          setOpenStatus({\n            ...openStatus,\n            list: data.list,\n            transaction: data.transaction\n          })\n        }\n        openStatus={openStatus}\n        transactionData={transactionData}\n        onInputAmount={data =>\n          setTransactionData({ ...transactionData, amount: data.target.value })\n        }\n        onInputLocation={data =>\n          setTransactionData({\n            ...transactionData,\n            location: data.target.value\n          })\n        }\n        onInputCategory={data =>\n          setTransactionData({\n            ...transactionData,\n            category: data.target.value\n          })\n        }\n        onInputDate={data =>\n          setTransactionData({\n            ...transactionData,\n            transaction_date: data\n          })\n        }\n        changeNavbarStatus={() => props.changeOpenStatus(false)}\n        resetValues={() =>\n          setTransactionData({\n            amount: \"\",\n            location: \"\",\n            category: \"\",\n            transaction_date: new Date(Date.now())\n          })\n        }\n      ></NewTransaction>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { BottomNavigation, BottomNavigationAction } from \"@material-ui/core\";\nimport PieChartIcon from \"@material-ui/icons/PieChart\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\nimport StoreMallDirectoryIcon from \"@material-ui/icons/StoreMallDirectory\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport AddTransactionOption from \"./addTransaction/AddTransactionOption\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles({\n  root: {\n    width: 500\n  }\n});\n\nexport default function Navbar(props) {\n  const [openAddTransaction, setOpenAddTransaction] = useState(false);\n  const [value, setValue] = useState(props.location);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    setValue(props.location);\n  }, [props.location]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const history = useHistory();\n\n  return (\n    <BottomNavigation\n      className={classes.root}\n      value={value}\n      onClick={handleChange}\n      style={{\n        position: \"fixed\",\n        bottom: \"0\",\n        width: \"100%\",\n        backgroundColor: \"#f7f7f7\"\n      }}\n    >\n      <BottomNavigationAction\n        label=\"Home\"\n        value=\"home\"\n        icon={<HomeIcon />}\n        onClick={() => {\n          history.push(\"/home\");\n        }}\n      />\n\n      <BottomNavigationAction\n        label=\"Store\"\n        value=\"store\"\n        icon={<StoreMallDirectoryIcon />}\n        onClick={() => {\n          history.push(\"/store\");\n        }}\n      />\n\n      <BottomNavigationAction\n        label=\"Payment\"\n        value=\"payment\"\n        onClick={() => setOpenAddTransaction(true)}\n        icon={<AddCircleOutlineIcon />}\n      />\n      <AddTransactionOption\n        openAddTransaction={openAddTransaction}\n        changeOpenStatus={data => setOpenAddTransaction(data)}\n      />\n      <BottomNavigationAction\n        value=\"analytics\"\n        label=\"Analytics\"\n        icon={<PieChartIcon />}\n        onClick={() => {\n          history.push(\"/analytics\");\n        }}\n      />\n      <BottomNavigationAction\n        value=\"profile\"\n        label=\"Profile\"\n        icon={<AccountCircleIcon />}\n        onClick={() => history.push(\"/profile\")}\n      />\n    </BottomNavigation>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"date-fns\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider\n} from \"@material-ui/pickers\";\nimport Close from \"@material-ui/icons/Close\";\nimport moment from \"moment\";\n\nexport default function GoalForm(props) {\n  const [formFields, setFormFields] = useState({\n    id: props.id,\n    name: props.name,\n    amount: props.amount,\n    start_date: props.start_date,\n    end_date: props.end_date\n  });\n  const [error, setError] = useState(\"\");\n\n  const handleFormFieldChange = name => event => {\n    setFormFields({ ...formFields, [name]: event.target.value });\n  };\n\n  const handleDateChange = (name, date) => {\n    setFormFields({ ...formFields, [name]: date });\n  };\n\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault();\n\n        console.log(\n          moment(event.target.start_date.value).format(\"YYYY-M-DD\") >=\n            moment(event.target.end_date.value).format(\"YYYY-M-DD\")\n        );\n        if (\n          moment(event.target.start_date.value).format(\"YYYY-M-DD\") <=\n          moment(event.target.end_date.value).format(\"YYYY-M-DD\")\n        ) {\n          props.onSave(formFields);\n          props.setRefreshGoals(!props.refreshGoals);\n          props.setActive(!props.active);\n        } else {\n          setError({\n            ...error,\n            date: \"***Please check your date range***\"\n          });\n        }\n\n        //error handling\n        if (formFields.name === \"\") {\n          setError({ ...error, name: \"This field cannot be left blank\" });\n        }\n\n        if (formFields.amount === \"\") {\n          setError({ ...error, amount: \"This field cannot be left blank\" });\n        }\n      }}\n      className=\"goal-form\"\n    >\n      <Close\n        className=\"close-button\"\n        onClick={() => {\n          props.setActive(!props.active);\n        }}\n      />\n\n      <TextField\n        className=\"name-field\"\n        label=\"Name\"\n        name=\"name\"\n        inputProps={{ maxLength: 20 }}\n        style={{ color: \"#FFFFFF\" }}\n        type=\"text\"\n        margin=\"normal\"\n        value={formFields.name}\n        helperText={error.name ? error.name : \"\"}\n        onChange={handleFormFieldChange(\"name\")}\n        required\n      />\n      <br />\n      <TextField\n        label=\"Amount\"\n        name=\"amount\"\n        type=\"number\"\n        margin=\"normal\"\n        value={formFields.amount}\n        helperText={error.amount ? error.amount : \"\"}\n        onChange={handleFormFieldChange(\"amount\")}\n        required\n      />\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <KeyboardDatePicker\n          disableToolbar\n          name=\"start_date\"\n          variant=\"inline\"\n          format=\"MM/dd/yyyy\"\n          margin=\"normal\"\n          label=\"Start Date\"\n          minDate={Date.now()}\n          value={formFields.start_date}\n          inputProps={{ readOnly: true }}\n          KeyboardButtonProps={{\n            \"aria-label\": \"change date\"\n          }}\n          onChange={date => handleDateChange(\"start_date\", date)}\n          required\n        />\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"MM/dd/yyyy\"\n          margin=\"normal\"\n          label=\"End Date\"\n          minDate={new Date(new Date(props.start_date).getTime() + 86400000)}\n          value={formFields.end_date}\n          onChange={date => handleDateChange(\"end_date\", date)}\n          name=\"end_date\"\n          inputProps={{ readOnly: true }}\n          KeyboardButtonProps={{\n            \"aria-label\": \"change date\"\n          }}\n          error={formFields.end_date === \"\"}\n          required\n        />\n      </MuiPickersUtilsProvider>\n      {error.date ? <p>{error.date}</p> : \"\"}\n      <Button className=\"save-button\" type=\"submit\" size=\"small\">\n        Save\n      </Button>\n    </form>\n  );\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport Add from \"@material-ui/icons/Add\";\nimport GoalForm from \"./GoalForm\";\n\nexport default function CreateGoal(props) {\n  const [active, setActive] = useState(false);\n\n  const onSave = newState => {\n    axios\n      .post(\n        \"http://localhost:3000/goals\",\n        {\n          goal: {\n            goal_type: \"saving\",\n            amount: parseInt(newState.amount),\n            name: newState.name,\n            start_date: newState.start_date,\n            end_date: newState.end_date\n          }\n        },\n        { withCredentials: true }\n      )\n      .then(() => {\n        props.setRefreshGoals(!props.refreshGoals);\n        setActive(!active);\n      })\n      .catch(err => console.log(\"error posting\", err));\n  };\n\n  return (\n    <Card className=\"new-goal-card\">\n      <CardContent>\n        {!active && (\n          <div\n            className=\"new-goal-card-title\"\n            onClick={() => setActive(!active)}\n          >\n            <h2>Create Goal</h2>\n            <Add />\n          </div>\n        )}\n        {active && (\n          <div className=\"new-goal-form\">\n            <GoalForm\n              active={active}\n              setActive={setActive}\n              refreshGoals={props.refreshGoals}\n              setRefreshGoals={props.setRefreshGoals}\n              name={\"\"}\n              amount={\"\"}\n              start_date={new Date(Date.now())}\n              end_date={new Date(new Date(Date.now()).getTime() + 86400000)}\n              onSave={onSave}\n            />\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nexport default function HealthBar(props) {\n  const [completed, setCompleted] = useState();\n  useEffect(() => {\n    setCompleted(props.hp);\n  }, [props.hp]);\n\n  return (\n    <div>\n      <section className=\"health\">\n        <LinearProgress\n          value={completed}\n          className=\"health-bar\"\n          variant=\"determinate\"\n          color=\"secondary\"\n        />\n        <p className=\"hp\">\n          {props.hp}\n          {\"\"}HP\n        </p>\n      </section>\n      {/* <button\n        onClick={() => {\n          props.minusHP(20);\n        }}\n      >\n        Subtract Health\n      </button>\n      <button\n        onClick={() => {\n          props.resetHP(100);\n        }}\n      >\n        Reset Health\n      </button> */}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nexport default function CoinCount(props) {\n  const [coins, setCoins] = useState();\n  useEffect(() => {\n    setCoins(props.coins);\n  }, [props.coins]);\n  return (\n    <div>\n      <p className=\"coins\">\n        {coins}\n        {\"   \"}\n        <img src=\"coins.jpg\" style={{ height: \"30px\", width: \"30px\" }} />\n      </p>\n      {/* <button\n        onClick={() => {\n          props.updateCoins(40);\n        }}\n      >\n        Reset Coins\n      </button> */}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport HealthBar from \"./HealthBar\";\nimport CoinCount from \"./CoinCount\";\n\nexport default function DashboardProfile(props) {\n  return (\n    <div className=\"user-profile\">\n      <section className=\"user\">\n        <img src=\"pig.png\" className=\"avatar\"></img>\n        <section className=\"user-health\">\n          <h5 className=\"user-name\"> Hello, {props.user.name}</h5>\n          <HealthBar\n            hp={props.user.hp}\n            minusHP={props.minusHP}\n            resetHP={props.resetHP}\n          />\n          <CoinCount coins={props.user.coins} updateCoins={props.updateCoins} />\n        </section>\n      </section>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardActions } from \"@material-ui/core\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport GoalForm from \"./GoalForm\";\n\nimport axios from \"axios\";\n\nexport default function SavedGoal(props) {\n  const [goalClicked, setGoalClicked] = useState({ status: false });\n  const [goalEdit, setGoalEdit] = useState({\n    id: props.id,\n    amount: props.amount,\n    name: props.name,\n    start_date: props.startDate,\n    end_date: props.endDate\n  });\n\n  const editGoal = newState => {\n    setGoalEdit(goalEdit => ({\n      ...goalEdit,\n      ...newState\n    }));\n  };\n\n  useEffect(() => {\n    axios\n      .put(\n        `http://localhost:3000/goals/${goalEdit.id}`,\n        {\n          goal: {\n            start_date: new Date(goalEdit.start_date),\n            end_date: new Date(goalEdit.end_date),\n            amount: parseInt(goalEdit.amount),\n            name: goalEdit.name\n          }\n        },\n        { withCredentials: true }\n      )\n      .then(() => {\n        props.setRefreshGoals(!props.refreshGoals);\n      });\n  }, [goalEdit, props.goals]);\n\n  return (\n    <Card className=\"goal-card\" style={{ backgroundColor: props.bgColor }}>\n      {goalClicked.status !== \"edit\" && (\n        <CardContent>\n          <div\n            className=\"goal-main-info\"\n            onClick={() => setGoalClicked({ status: !goalClicked.status })}\n          >\n            <h2>{props.name}</h2>\n            <p className=\"goal-target\">\n              {props.completed ? \"COMPLETED\" : `$${props.dailyTarget}/day`}\n            </p>\n          </div>\n          <div\n            className=\"goal-extra-info\"\n            style={{ display: goalClicked.status ? \"block\" : \"none\" }}\n          >\n            <p>\n              {new Date(props.startDate).toLocaleString(\"default\", {\n                month: \"short\",\n                day: \"numeric\",\n                year: \"numeric\"\n              })}{\" \"}\n              -{\" \"}\n              {new Date(props.endDate).toLocaleString(\"default\", {\n                month: \"short\",\n                day: \"numeric\",\n                year: \"numeric\"\n              })}\n              <p>Total: ${parseInt(props.amount)}</p>\n            </p>\n            <CardActions className=\"card-buttons\">\n              <Edit onClick={() => setGoalClicked({ status: \"edit\" })} />\n              <Delete onClick={() => props.onDelete(goalEdit)} />\n            </CardActions>\n          </div>\n        </CardContent>\n      )}\n\n      {goalClicked.status === \"edit\" && (\n        <CardContent>\n          <div>\n            <GoalForm\n              className=\"saved-goal-form\"\n              key={props.id}\n              id={props.id}\n              active={goalClicked}\n              setActive={setGoalClicked}\n              name={goalEdit.name}\n              amount={goalEdit.amount}\n              start_date={goalEdit.start_date}\n              end_date={goalEdit.end_date}\n              onSave={data => editGoal(data)}\n              refreshGoals={props.refreshGoals}\n              setRefreshGoals={props.setRefreshGoals}\n            />\n          </div>\n        </CardContent>\n      )}\n    </Card>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Progress } from \"reactstrap\";\nimport { Card } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nconst ProgressBar = props => {\n  const [total, setTotal] = useState([]);\n  const [budget, setBudget] = useState(0);\n  const [savingGoal, setSavingGoal] = useState(0);\n\n  useEffect(() => {\n    let currentMonth = new Date().toLocaleString(\"default\", { month: \"long\" });\n    axios\n      .get(\n        `http://localhost:3000/transactions/?month=${currentMonth}&type=progress`,\n        {\n          withCredentials: true\n        }\n      )\n      .then(res => {\n        setTotal(res.data.total);\n        setBudget(Number(res.data.budget));\n        setSavingGoal(Number(res.data.toSave));\n      });\n  }, [props.goals]);\n\n  const totalSpending = (total / budget) * 100;\n  const totalSaving = (savingGoal / budget) * 100;\n\n  return (\n    <Card className=\"progress-card\">\n      <h3>Daily Progress:</h3>\n      <Progress className=\"daily-progress\" multi value={100}>\n        <Progress bar color=\"success\" value={totalSpending}>\n          {total ? `$${total}` : \"\"}\n        </Progress>\n        <Progress bar color=\"warning\" value={totalSaving}>\n          {savingGoal ? `$${savingGoal}` : \"\"}\n        </Progress>\n        {/* <Progress bar value={100 - (totalSpending + totalSaving)}></Progress> */}\n      </Progress>\n      <section className=\"daily-tracker\">\n        <p>{`Your daily budget is $${budget}`}</p>\n        {total + savingGoal > budget ? (\n          <p style={{ color: \"#e34040\" }}>You are currently over your budget</p>\n        ) : (\n          <p style={{ color: \"#6dbd55\" }}>You are currently on track!</p>\n        )}\n      </section>\n    </Card>\n  );\n};\n\nexport default ProgressBar;\n","import React, { useEffect, useState } from \"react\";\nimport { Card } from \"@material-ui/core\";\nimport Axios from \"axios\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nexport default function TopSpending(props) {\n  const [topThree, setTopThree] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/check_top_three\", {\n      withCredentials: true\n    }).then(res => {\n      setTopThree([...res.data]);\n    });\n  }, []);\n  return (\n    <Card\n      className=\"progress-card\"\n      style={{ paddingTop: \"10px\", paddingBottom: \"20\" }}\n    >\n      <h3 style={{ marginBottom: \"0\" }}>Your Top Spending:</h3>\n      <Table aria-label=\"simple table\" style={{ height: \"100%\" }}>\n        <TableBody className=\"spending-body\">\n          {topThree.length > 0 &&\n            topThree.map(row => (\n              <TableRow\n                className=\"top-location\"\n                key={row.location}\n                style={{ padding: 0 }}\n              >\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  style={{ padding: 0, margin: 0 }}\n                >\n                  {row.location}\n                </TableCell>\n                <TableCell\n                  className=\"top-amount\"\n                  style={{ padding: 0, margin: 0 }}\n                >\n                  ${row.total.toFixed(2)}\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport { Progress } from \"reactstrap\";\nimport axios from \"axios\";\n\nconst MonthlyProgressBar = () => {\n  const [total, setTotal] = useState([]);\n  const [budget, setBudget] = useState(0);\n\n  useEffect(() => {\n    let currentMonth = new Date().toLocaleString(\"default\", { month: \"long\" });\n    axios\n      .get(\n        `http://localhost:3000/transactions/?month=${currentMonth}&type=monthlyprogress`,\n        {\n          withCredentials: true\n        }\n      )\n      .then(res => {\n        setTotal(res.data.total);\n        setBudget(res.data.budget);\n      });\n  }, []);\n\n  const percentMonthlySpending = (total / budget) * 100;\n\n  const checkMonthlySpending = spending => {\n    if (spending) {\n      if (spending >= 0 && spending < 50) {\n        return \"success\";\n      } else if (spending >= 50 && spending < 80) {\n        return \"warning\";\n      } else {\n        return \"danger\";\n      }\n    }\n  };\n\n  return (\n    <Card className=\"progress-card\">\n      <h3>Monthly Progress:</h3>\n      <Progress className=\"monthly-progress\" value={100}>\n        <Progress\n          className=\"monthly-progress\"\n          bar\n          color={checkMonthlySpending(percentMonthlySpending)}\n          value={percentMonthlySpending > 100 ? 100 : percentMonthlySpending}\n        >\n          {total ? `${percentMonthlySpending.toFixed(2)}%` : \"\"}\n        </Progress>\n      </Progress>\n      <section className=\"daily-tracker\">\n        <p>{`Your monthly budget is $${budget}`}</p>\n        {total > budget ? (\n          <p style={{ color: \"#e34040\" }}>You are currently over your budget</p>\n        ) : (\n          <p style={{ color: \"#6dbd55\" }}>You are currently on track!</p>\n        )}\n      </section>\n    </Card>\n  );\n};\n\nexport default MonthlyProgressBar;\n","import React, { useState, useEffect } from \"react\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\nimport { useHistory } from \"react-router-dom\";\n\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nimport Navbar from \"./Navbar\";\nimport CreateGoal from \"./CreateGoal\";\nimport DashboardProfile from \"./DashboardProfile\";\nimport SavedGoal from \"./SavedGoal\";\nimport ProgressBar from \"./ProgressBar\";\nimport TopSpending from \"./TopSpending\";\nimport MonthlyProgressBar from \"./MonthlyProgressBar\";\n\nimport \"../styles/Dashboard.sass\";\n\nexport default function Dashboard(props) {\n  if (!props.logInStatus.user) {\n    props.checkLogInStatus();\n  }\n  const history = useHistory();\n  const [goals, setGoals] = useState([]);\n  const [progressActiveStep, setProgressActiveStep] = useState(1);\n\n  const handleNextSwipe = () => {\n    if (progressActiveStep <= 2) {\n      setProgressActiveStep(prevActiveStep => prevActiveStep + 1);\n    }\n  };\n\n  const handleBackSwipe = () => {\n    if (progressActiveStep >= 0) {\n      setProgressActiveStep(prevActiveStep => prevActiveStep - 1);\n    }\n  };\n\n  const findGoalIndexById = (id, arr) => {\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].id === id) {\n        return i;\n      }\n    }\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3000/goals\", { withCredentials: true })\n      .then(res => {\n        setGoals(res.data.goals);\n      });\n  }, [props.refreshGoals]);\n\n  const deleteGoal = data => {\n    axios\n      .delete(`http://localhost:3000/goals/${data.id}`, {\n        withCredentials: true\n      })\n      .then(() => {\n        const index = findGoalIndexById(data.id, goals);\n        const updatedGoals = [...goals];\n        updatedGoals.splice(index, 1);\n        setGoals(updatedGoals);\n      });\n  };\n\n  return (\n    <div className=\"Dashboard\">\n      <DashboardProfile\n        user={props.logInStatus.user}\n        minusHP={props.minusHP}\n        resetHP={props.resetHP}\n        updateCoins={props.updateCoins}\n      />\n\n      <h1 class=\"date-now\">{moment().format(\"MMMM Do, YYYY\")}</h1>\n      <SwipeableViews\n        index={1}\n        onChangeIndex={(index, indexLatest) => {\n          index > indexLatest ? handleNextSwipe() : handleBackSwipe();\n        }}\n      >\n        <TopSpending />\n        <ProgressBar goals={goals} />\n        <MonthlyProgressBar />\n      </SwipeableViews>\n      <MobileStepper\n        className=\"progress-stepper\"\n        variant=\"dots\"\n        steps={3}\n        position=\"static\"\n        activeStep={progressActiveStep}\n      />\n      <section className=\"goals\">\n        <h3>Saving Goals:</h3>\n        <CreateGoal\n          newGoal={goals}\n          setNewGoal={setGoals}\n          refreshGoals={props.refreshGoals}\n          setRefreshGoals={props.setRefreshGoals}\n        />\n        <div className=\"goal-card\" style={{ WebkitOverflowScrolling: \"touch\" }}>\n          {goals.length > 0 &&\n            goals.map(goal => (\n              <SavedGoal\n                key={goal.id}\n                id={goal.id}\n                name={goal.name}\n                amount={goal.amount}\n                startDate={goal.start_date}\n                endDate={goal.end_date}\n                onDelete={data => deleteGoal(data)}\n                // editRequest={data => editGoal(data)}\n                newGoal={goals}\n                setNewGoal={setGoals}\n                refreshGoals={props.refreshGoals}\n                setRefreshGoals={props.setRefreshGoals}\n                findGoalIndexById={findGoalIndexById}\n                dailyTarget={goal.target_per_day}\n                completed={goal.completed}\n                bgColor={\n                  goal.completed\n                    ? \"#66bb6a\"\n                    : new Date(goal.start_date) > new Date(Date.now())\n                    ? \"#d95c52\"\n                    : \"#4db6ac\"\n                }\n              />\n            ))}\n        </div>\n      </section>\n      <Navbar location={history.location.pathname.slice(1)} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../../styles/Onboarding.sass\";\n\nconst Onboarding1 = () => {\n  return (\n    <div>\n      <h1 className=\"title\">Welcome to Budgey</h1>\n      {/* <img src=\"pig.png\" className=\"avatar-pig\"></img> */}\n      <div className=\"onboarding1-content\">\n        <div>\n          A budgeting app designed to help you save and visualize your spending.\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Onboarding1;\n","import React from \"react\";\n\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\nimport LocalTaxiIcon from \"@material-ui/icons/LocalTaxi\";\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\nimport FitnessCenterIcon from \"@material-ui/icons/FitnessCenter\";\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\nimport PieChartIcon from \"@material-ui/icons/PieChart\";\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\n\nimport \"../../styles/Onboarding.sass\";\n\nconst Onboarding2 = () => {\n  return (\n    <div>\n      {\" \"}\n      <img src=\"budget.png\" className=\"avatar-budget\"></img>\n      <div className=\"onboarding1-content\">You can see your daily targets.</div>\n      {/* <img src=\"analytics-pie.png\" className=\"avatar-pie\"></img> */}\n      <div className=\"icons-category\">\n        <BarChartIcon className=\"specific-icon\" />\n        <TrendingUpIcon className=\"specific-icon\" />\n        <PieChartIcon className=\"specific-icon\" />\n      </div>\n      <div className=\"onboarding1-content\">\n        You can compare your spending with other months.\n      </div>\n      <div className=\"icons-category\">\n        <ShoppingBasketIcon className=\"specific-icon\" />\n        <LocalTaxiIcon className=\"specific-icon\" />\n        <FastfoodIcon className=\"specific-icon\" />\n        <FitnessCenterIcon className=\"specific-icon\" />\n      </div>\n      <div className=\"onboarding1-content\">\n        You can see where most of your spending goes.\n      </div>\n    </div>\n  );\n};\n\nexport default Onboarding2;\n","import React from \"react\";\n\nimport \"../../styles/Onboarding.sass\";\n\nconst Onboarding3 = () => {\n  return (\n    <div className=\"onboarding3-entire\">\n      <img src=\"credit-card.png\" className=\"transaction-camera\"></img>\n      <div className=\"onboarding1-content\">\n        Budgey grabs all your transactions via credit cards\n      </div>\n      <img src=\"camera.png\" className=\"transaction-camera\"></img>\n      <div className=\"onboarding1-content\">\n        Paid with Cash? <br></br>Take a picture of your receipt to instantly add\n        to your transactions automagically\n      </div>\n    </div>\n  );\n};\n\nexport default Onboarding3;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"../../styles/Onboarding.sass\";\n\nconst Onboarding4 = () => {\n  const history = useHistory();\n  return (\n    <div>\n      <div>\n        <div className=\"title\">Find Badges, Get Coin</div>\n        <img src=\"badges.png\" className=\"badges-final\"></img>\n        <div className=\"onboarding4-content\">\n          Unlock badges by hitting your saving goals\n        </div>\n\n        <button\n          className=\"onboarding-button\"\n          onClick={() => history.push(\"/home\")}\n        >\n          Happy Savings!\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Onboarding4;\n","import React from \"react\";\n\nimport SwipeableViews from \"react-swipeable-views\";\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\n\nimport Header from \"./Header\";\nimport Onboarding1 from \"./Onboarding/Onboarding1\";\nimport Onboarding2 from \"./Onboarding/Onboarding2\";\nimport Onboarding3 from \"./Onboarding/Onboarding3\";\nimport Onboarding4 from \"./Onboarding/Onboarding4\";\n\nimport \"../styles/Onboarding.sass\";\n\nexport default function Onboarding() {\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNextSwipe = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBackSwipe = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n  return (\n    <div className=\"onboarding\">\n      <Header />\n      <div className=\"swipe-card\">\n        <SwipeableViews\n          onChangeIndex={(index, indexLatest) => {\n            index > indexLatest ? handleNextSwipe() : handleBackSwipe();\n          }}\n        >\n          <Onboarding1 />\n          <Onboarding2 />\n          <Onboarding3 />\n          <Onboarding4 />\n        </SwipeableViews>\n        <MobileStepper\n          className=\"onboarding-stepper\"\n          variant=\"dots\"\n          steps={4}\n          position=\"static\"\n          activeStep={activeStep}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport \"../styles/MonthOptions.sass\";\n\nconst months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\"\n];\n\nconst MonthOptions = ({ month, setMonth, setCategory }) => {\n  const isCurrentMonth = new Date().toLocaleString(\"default\", {\n    month: \"long\"\n  });\n\n  return (\n    <div>\n      <FormControl className=\"monthly-options-list\">\n        <InputLabel id=\"demo-simple-select-outlined-label\">Month</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={month}\n          onChange={e => {\n            setMonth(e.target.value);\n            setCategory(\"All Transactions\");\n          }}\n        >\n          {months.map((month, index) => (\n            <MenuItem\n              key={index}\n              value={month}\n              selected={month === isCurrentMonth}\n            >\n              {month}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default MonthOptions;\n","import React from \"react\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport moment from \"moment\";\n\nimport \"../styles/SingleTransaction.sass\";\n\nconst SingleTransaction = ({ amount, location, transactionDate }) => {\n  return (\n    <Card className=\"transaction\" elevation={0}>\n      <CardContent className=\"transaction-card\" elevation={2}>\n        <h4>{location}</h4>\n        <div className=\"transaction-details\">\n          <div className=\"transaction-labels\">\n            <p>Amount:</p>\n            <p>Date:</p>\n          </div>\n          <div className=\"transaction-content\">\n            <p>${Number(amount).toFixed(2)}</p>\n            <p>{moment(transactionDate).format(\"MMMM Do YYYY, h:mm:ss a\")}</p>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SingleTransaction;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SingleTransaction from \"./SingleTransaction\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\n\nimport \"../styles/CategoryTransaction.sass\";\n\nconst CategoryTransaction = ({ category, pieMonth }) => {\n  const [allTransactions, setAllTransactions] = useState([]);\n  const [page, setPage] = useState(0);\n  const [transactionsPerPage, setTransactionsPerPage] = useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeTransactionsPerPage = event => {\n    setTransactionsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n    axios\n      .get(\n        `http://localhost:3000/transactions/?month=${pieMonth}&type=alltransactions`,\n        { withCredentials: true }\n      )\n      .then(res => {\n        if (!res.data.allTransactions) {\n          setAllTransactions([]);\n        } else {\n          res.data.allTransactions.length > 0\n            ? setAllTransactions(res.data.allTransactions)\n            : setAllTransactions([]);\n        }\n      });\n  }, [pieMonth]);\n\n  let filteredTransaction = allTransactions;\n  if (category !== \"All Transactions\") {\n    filteredTransaction = allTransactions.filter(transaction =>\n      transaction.category.includes(category)\n    );\n  }\n\n  return (\n    <div>\n      {/* {filteredTransaction.length > 0 && (\n        <p> Please Click on pie slice to get transactions for that category</p>\n      )} */}\n      <h3 className=\"category-title-selected\">\n        {category ? category : \"All Transactions\"}\n      </h3>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={filteredTransaction.length}\n        rowsPerPage={transactionsPerPage}\n        page={page}\n        backIconButtonProps={{\n          \"aria-label\": \"previous page\"\n        }}\n        nextIconButtonProps={{\n          \"aria-label\": \"next page\"\n        }}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeTransactionsPerPage}\n        labelRowsPerPage=\"Rows/page:\"\n        className=\"transaction-list-header\"\n      />\n      {filteredTransaction\n        .slice(\n          page * transactionsPerPage,\n          page * transactionsPerPage + transactionsPerPage\n        )\n        .map(allTransaction => (\n          <SingleTransaction\n            key={allTransaction.id}\n            location={allTransaction.location}\n            amount={allTransaction.amount}\n            transactionDate={allTransaction.transaction_date}\n            category={allTransaction.category}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default CategoryTransaction;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Highcharts from \"highcharts\";\nimport MonthOptions from \"./MonthOptions\";\nimport CategoryTransaction from \"./CategoryTransaction\";\nimport { useFormControl } from \"@material-ui/core/FormControl\";\n\nimport \"../styles/Piechart.sass\";\n\nexport default function Piechart({ category, setCategory }) {\n  const [transactions, setTransactions] = useState([]);\n  const [monthTotal, setMonthTotal] = useState(0);\n  const [pieMonth, setPieMonth] = useState(\n    new Date().toLocaleString(\"default\", { month: \"long\" })\n  );\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:3000/transactions/?month=${pieMonth}&type=pie`, {\n        withCredentials: true\n      })\n      .then(res => {\n        if (res.data.transactions.length > 0) {\n          setTransactions(res.data.transactions);\n          setMonthTotal(res.data.total[0].total);\n        } else {\n          setTransactions([]);\n        }\n      });\n  }, [pieMonth]);\n\n  useEffect(() => {\n    if (transactions.length > 0) {\n      Highcharts.chart({\n        chart: {\n          type: \"pie\",\n          renderTo: \"Expenses-graph\"\n        },\n        title: {\n          verticalAlign: \"middle\",\n          floating: true,\n          text: \"\",\n          style: {\n            fontSize: \"15px\"\n          }\n        },\n        plotOptions: {\n          pie: {\n            allowPointSelect: true,\n            cursor: \"pointer\",\n            point: {\n              events: {\n                click: function(event) {\n                  setCategory(prev =>\n                    prev === event.point.name\n                      ? \"All Transactions\"\n                      : event.point.name\n                  );\n                }\n              }\n            },\n            dataLabels: {\n              enabled: false\n            },\n            innerSize: \"20%\",\n            showInLegend: true\n          }\n        },\n        legend: {\n          enabled: true,\n          floating: false,\n          borderWidth: 0,\n          align: \"center\", // Moving the legend to the right of the donut chart\n          layout: \"vertical\", // Display in columns\n          verticalAlign: \"bottom\",\n          itemMarginTop: 2, // Space between each category in the legend\n          itemMarginBottom: 2,\n          itemStyle: {\n            lineHeight: \"35px\" // Aligning icons and text\n          },\n          useHTML: true,\n          labelFormatter: function() {\n            // Includes cat & price in legend\n            return (\n              '<div style=\"display:flex; justify-content:space-around; margin-top:-10px; position:relative; width:300px;border-bottom:1px solid #DCDCDC;\"><span style=\"font-weight:normal; vertical-align:super; width:100px\">' +\n              this.name +\n              ' </span> <div style=\"display:flex; justify-content:space-around; width:200px\"><span style=\"font-weight:normal; vertical-align:super; \">' +\n              this.y.toFixed(2) +\n              '%</span><span style=\"font-weight:normal; vertical-align:super; right:0px;\">$' +\n              this.amount.toFixed(2) +\n              \"</span></div></div>\"\n            );\n          }\n        },\n        colors: [\"#FAD331\", \"#64b5f6\", \"#b39ddb\", \"#ef6c00\"],\n        series: [\n          {\n            name: \"Expenses\",\n            data: transactions\n          }\n        ]\n      });\n    }\n  }, [transactions]);\n\n  return (\n    <div>\n      <div className=\"piechart-month-options\">\n        <MonthOptions\n          month={pieMonth}\n          setMonth={setPieMonth}\n          setCategory={setCategory}\n        />\n      </div>\n      {transactions.length === 0 && (\n        <div className=\"no-transactions-error\">\n          You have no transactions for this month\n        </div>\n      )}\n      {transactions.length > 0 && (\n        <div>\n          <div id=\"Expenses-graph\"></div>\n          <CategoryTransaction category={category} pieMonth={pieMonth} />{\" \"}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Highcharts from \"highcharts\";\nimport MonthOptions from \"./MonthOptions\";\nimport axios from \"axios\";\n\nimport \"../styles/Barchart.sass\";\n\nexport default function Barchart({ category, setCategory }) {\n  const [bar1Month, setBar1Month] = useState(\n    new Date().toLocaleString(\"default\", { month: \"long\" })\n  );\n  const [bar2Month, setBar2Month] = useState(\"\");\n\n  const [transactions1, setTransactions1] = useState([]);\n  const [transactions2, setTransactions2] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:3000/transactions/?month=${bar1Month}&type=bar`, {\n        withCredentials: true\n      })\n      .then(res => setTransactions1(res.data.transactions));\n  }, [bar1Month]);\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:3000/transactions/?month=${bar2Month}&type=bar`, {\n        withCredentials: true\n      })\n      .then(res => setTransactions2(res.data.transactions));\n  }, [bar2Month]);\n\n  useEffect(() => {\n    Highcharts.chart({\n      chart: {\n        type: \"column\",\n        renderTo: \"bar-expenses-graph\"\n      },\n      title: {\n        text: \"This Year\"\n      },\n      xAxis: {\n        categories: bar2Month ? [bar1Month, bar2Month] : [bar1Month],\n        crosshair: true\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: \"Expenses (CAD)\"\n        }\n      },\n      tooltip: {\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n        pointFormat:\n          '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n          '<td style=\"padding:0\"><b>{point.y:.1f} mm</b></td></tr>',\n        footerFormat: \"</table>\",\n        shared: true,\n        useHTML: true\n      },\n      plotOptions: {\n        column: {\n          pointPadding: 0.2,\n          borderWidth: 0\n        }\n      },\n\n      series: getChartdata()\n    });\n  }, [transactions1, transactions2, bar1Month, bar2Month]);\n\n  function getChartdata() {\n    let dataSet = [];\n    transactions1.forEach((transaction, index) => {\n      dataSet.push({ name: transaction.category, data: ifTwoCharts(index) });\n    });\n\n    return dataSet;\n  }\n\n  function ifTwoCharts(index) {\n    if (bar2Month) {\n      return [\n        transactions1.length > 0 ? transactions1[index].amount : [],\n        transactions2.length > 0 ? transactions2[index].amount : []\n      ];\n    } else {\n      if (transactions1.length > 0) {\n        return [transactions1[index].amount];\n      } else {\n        return [];\n      }\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"barchart-month-options\">\n        <MonthOptions\n          month={bar1Month}\n          setMonth={setBar1Month}\n          setCategory={setCategory}\n        />\n        <div>Vs</div>\n        <MonthOptions\n          month={bar2Month}\n          setMonth={setBar2Month}\n          setCategory={setCategory}\n        />\n      </div>\n      <div id=\"bar-expenses-graph\">BAR CHART</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport \"../styles/YearOptions.sass\";\nconst years = [\"2019\"];\nconst YearOptions = ({ year, setYear }) => {\n  const isCurrentYear = new Date().toLocaleString(\"default\", {\n    month: \"numeric\"\n  });\n\n  return (\n    <div>\n      <FormControl className=\"year-options-list\">\n        <InputLabel id=\"demo-simple-select-outlined-label\">Month</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={year}\n          onChange={e => {\n            setYear(e.target.value);\n          }}\n        >\n          {years.map((year, index) => (\n            <MenuItem\n              key={index}\n              value={year}\n              selected={year === isCurrentYear}\n            >\n              {year}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default YearOptions;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Highcharts from \"highcharts\";\n\nimport YearOptions from \"./YearOptions\";\n\nconst Budgetchart = () => {\n  const [budgetData, setbudgetData] = useState([]);\n  const [compareMonthlyTransactions, setCompareMonthlyTransactions] = useState(\n    {}\n  );\n  const [year, setYear] = useState(\"2019\");\n  useEffect(() => {\n    axios\n      .get(\n        `http://localhost:3000/transactions/?month=January&type=budgetchart`,\n        {\n          withCredentials: true\n        }\n      )\n      .then(res => {\n        setCompareMonthlyTransactions(res.data.transactions);\n        setbudgetData(res.data.budget);\n      });\n  }, []);\n\n  useEffect(() => {\n    const categories = Object.keys(compareMonthlyTransactions);\n    const monthData = Object.values(compareMonthlyTransactions);\n    let negativeData = [];\n    let positiveData = [];\n    monthData.forEach(data => {\n      if (budgetData - data < 0) {\n        negativeData.push(budgetData - data);\n        positiveData.push(0);\n      } else {\n        negativeData.push(0);\n        positiveData.push(budgetData - data);\n      }\n    });\n\n    Highcharts.chart({\n      chart: {\n        type: \"bar\",\n        renderTo: \"budget-goal\"\n      },\n      title: {\n        text: \"\"\n      },\n\n      xAxis: [\n        {\n          categories: categories,\n          reversed: true,\n          labels: {\n            step: 1\n          }\n        }\n      ],\n      yAxis: {\n        title: {\n          text: \"Amount\"\n        }\n      },\n\n      plotOptions: {\n        series: {\n          stacking: \"normal\"\n        }\n      },\n\n      series: [\n        {\n          name: \"Over Budget\",\n          data: negativeData,\n          color: \"#f5424e\"\n        },\n        {\n          name: \"Under Budget\",\n          data: positiveData,\n          color: \"#45d624\"\n        }\n      ]\n    });\n  }, [compareMonthlyTransactions, budgetData]);\n  return (\n    <div>\n      <div className=\"piechart-month-options\">\n        <YearOptions year={year} setYear={setYear} />\n      </div>\n      <div id=\"budget-goal\"></div>\n    </div>\n  );\n};\n\nexport default Budgetchart;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Piechart from \"./Piechart\";\nimport Barchart from \"./Barchart\";\nimport Budgetchart from \"./Budgetchart.js\";\nimport Navbar from \"./Navbar\";\n\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nimport \"../styles/Analytics.sass\";\n\nexport default function Analytics() {\n  const [chart, setChart] = useState(\"Current Breakdown\");\n  const history = useHistory();\n  const [category, setCategory] = useState(\"All Transactions\");\n\n  const chartDropdown = {\n    \"Current Breakdown\": (\n      <Piechart category={category} setCategory={setCategory} />\n    ),\n    \"Monthly Comparison\": (\n      <Barchart category={category} setCategory={setCategory} />\n    ),\n    \"Budget Comparison\": <Budgetchart />\n  };\n\n  return (\n    <div>\n      <div className=\"analytics-title\">\n        <AssessmentIcon className=\"analytics-icon\" />\n        <div>Analytics</div>\n      </div>\n      <div className=\"analytics-title-category\">\n        <div>\n          <FormControl className=\"analytics-category\">\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Analytics Category\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              name=\"\"\n              value={chart}\n              onChange={e => {\n                setChart(e.target.value);\n              }}\n            >\n              <MenuItem value=\"Current Breakdown\">Current Breakdown</MenuItem>\n              <MenuItem value=\"Monthly Comparison\">Monthly Comparison</MenuItem>\n              <MenuItem value=\"Budget Comparison\">Budget Comparison</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n      </div>\n      {chartDropdown[chart]}\n      <Navbar location={history.location.pathname.slice(1)} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"../styles/EditProfile.sass\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField, CardContent, Card } from \"@material-ui/core\";\nimport Axios from \"axios\";\n\nexport default function EditProfile(props) {\n  const [updatedFields, setUpdatedFields] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password_confirmation: \"\"\n  });\n\n  const handleSubmit = () => {\n    if (Object.values(updatedFields).filter(field => field).length > 0) {\n      Axios.put(\n        `http://localhost:3000/registrations/${props.id}`,\n        {\n          name: updatedFields.name,\n          email: updatedFields.email,\n          password: updatedFields.password,\n          password_confirmation: updatedFields.password_confirmation\n        },\n        { withCredentials: true }\n      )\n        .then(result => {\n          if (result.data.success) {\n            props.setLoginStatus({\n              ...props.logInStatus,\n              user: {\n                ...props.logInStatus.user,\n                name: updatedFields.name\n                  ? updatedFields.name\n                  : props.logInStatus.user.name,\n                email: updatedFields.email\n                  ? updatedFields.email\n                  : props.logInStatus.user.email\n              }\n            });\n            setUpdatedFields({\n              ...updatedFields,\n              name: \"\",\n              email: \"\",\n              password: \"\",\n              password_confirmation: \"\"\n            });\n          }\n          props.closeEditProfile();\n        })\n        .catch(e => {\n          alert(\"There was an error:\", e);\n        });\n    } else {\n      alert(\"All Fields Empty\");\n    }\n  };\n  return (\n    <div className=\"edit-profile\" style={{ width: \"100%\" }}>\n      <Card>\n        <CardContent>\n          <form\n            className=\"edit-profile-form\"\n            onSubmit={() => props.closeEditProfile()}\n          >\n            <div className=\"text-fields\">\n              <TextField\n                required\n                style={{ margin: \"5px\", width: \"80%\" }}\n                type=\"text\"\n                placeholder=\"Name\"\n                value={updatedFields.name}\n                onChange={e =>\n                  setUpdatedFields({ ...updatedFields, name: e.target.value })\n                }\n              ></TextField>\n              <br />\n              <TextField\n                required\n                style={{ margin: \"5px\", width: \"80%\" }}\n                type=\"text\"\n                placeholder=\"Email\"\n                value={updatedFields.email}\n                onChange={e =>\n                  setUpdatedFields({ ...updatedFields, email: e.target.value })\n                }\n              ></TextField>\n              <br />\n              <TextField\n                required\n                style={{ margin: \"5px\", width: \"80%\" }}\n                type=\"text\"\n                placeholder=\"Password\"\n                value={updatedFields.password}\n                onChange={e =>\n                  setUpdatedFields({\n                    ...updatedFields,\n                    password: e.target.value\n                  })\n                }\n              ></TextField>\n              <br />\n              <TextField\n                required\n                style={{ margin: \"5px\", width: \"80%\" }}\n                type=\"text\"\n                placeholder=\"Re-Enter Password\"\n                value={updatedFields.password_confirmation}\n                onChange={e =>\n                  setUpdatedFields({\n                    ...updatedFields,\n                    password_confirmation: e.target.value\n                  })\n                }\n              ></TextField>\n            </div>\n            <div className=\"submit-button\">\n              <Button onClick={() => handleSubmit()}>Save</Button>\n            </div>\n          </form>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"../styles/EditBudget.sass\";\nimport Axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField, CardContent, Card } from \"@material-ui/core\";\n\nexport default function EditProfile(props) {\n  const [updateBudgetInfo, setUpdateBudgetInfo] = useState({\n    amount: \"\",\n    goal_type: \"budget\",\n    name: \"budget\",\n    start_date: null,\n    end_date: null\n  });\n  function updateBudget() {\n    Axios.post(\"http://localhost:3000/goals\", updateBudgetInfo, {\n      withCredentials: true\n    });\n  }\n  return (\n    <div className=\"edit-budget\">\n      <Card>\n        <CardContent>\n          <div>\n            <TextField\n              style={{ margin: \"5px\", width: \"80%\" }}\n              placeholder=\"Enter a new Budget\"\n              value={updateBudgetInfo.amount}\n              onChange={e =>\n                setUpdateBudgetInfo({\n                  ...updateBudgetInfo,\n                  amount: e.target.value\n                })\n              }\n            ></TextField>\n          </div>\n          <div className=\"submit-button\">\n            <Button\n              onClick={() => {\n                if (updateBudgetInfo.amount > 0) {\n                  props.closeEditBudget();\n                  updateBudget();\n                  setUpdateBudgetInfo({ ...updateBudgetInfo, amount: \"\" });\n                }\n              }}\n            >\n              Update Budget\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport EditProfile from \"./EditProfile\";\nimport EditBudget from \"./EditBudget\";\nimport \"../styles/ProfilePage.sass\";\n\nexport default function Profile(props) {\n  if (!props.logInStatus.user) props.checkLogInStatus();\n  const history = useHistory();\n  console.log(history.location.pathname);\n  const [openEdit, setOpenEdit] = useState(false);\n  const [openBudget, setOpenBudget] = useState(false);\n\n  return (\n    <div>\n      <div className=\"profile-page\">\n        <div className=\"header\">\n          <div className=\"header-left\">\n            <img src=\"pig.png\" className=\"avatar\"></img>\n            <p\n              className=\"logout\"\n              onClick={() => {\n                props.logOutClick();\n                history.push(\"/\");\n              }}\n            >\n              Logout\n            </p>\n          </div>\n          <div className=\"header-profile\">\n            {/* <p className=\"username\">Hi {props.logInStatus.user.name}</p> */}\n            <p className=\"profile-username\">{props.logInStatus.user.name}</p>\n            <p className=\"profile-email\">{props.logInStatus.user.email}</p>\n          </div>\n        </div>\n        <div className=\"description\">\n          <p>\n            Edit your profile information or change your monthly budget goal\n            below. <strong>Happy Savings!</strong>\n          </p>\n        </div>\n        <div className=\"edit-fields\">\n          <Button\n            className=\"edit-user-fields-button\"\n            onClick={() => setOpenEdit(!openEdit)}\n          >\n            Edit Profile\n          </Button>\n          {openEdit ? (\n            <EditProfile\n              id={props.logInStatus.user.id}\n              setLoginStatus={props.setLoginStatus}\n              logInStatus={props.logInStatus}\n              closeEditProfile={() => setOpenEdit(false)}\n            />\n          ) : null}\n          <Button\n            className=\"edit-budget-fields-button\"\n            onClick={() => setOpenBudget(!openBudget)}\n          >\n            Edit Budget\n          </Button>\n          {openBudget ? (\n            <EditBudget closeEditBudget={() => setOpenBudget(false)} />\n          ) : null}\n        </div>\n      </div>\n      <Navbar location={history.location.pathname.slice(1)} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport Badges from \"./Badges\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Card, CardContent } from \"@material-ui/core\";\nimport StoreMallDirectoryIcon from \"@material-ui/icons/StoreMallDirectory\";\n\nimport \"../styles/Store.sass\";\n\nexport default function Store(props) {\n  const history = useHistory();\n\n  if (!props.logInStatus.user) props.checkLogInStatus();\n  return (\n    <div className=\"store-page\">\n      <h1 className=\"store-title\">\n        <StoreMallDirectoryIcon className=\"store-icon\" />\n        Store\n      </h1>\n      <div className=\"budget-status\">\n        You have met your budget <strong>{props.budgetAchieved}</strong> times\n        this year\n      </div>\n      <h3 className=\"store-headings\">Inventory</h3>\n      <Card className=\"store-content inventory\">\n        <CardContent className=\"store-items\">\n          <span>\n            <p className=\"item-title\">\n              {\" \"}\n              <img\n                className=\"item-img\"\n                src=\"coins.jpg\"\n                style={{ height: \"50px\", width: \"50px\" }}\n              />\n              Coins\n            </p>\n          </span>\n          <p className=\"amount\">{props.coins}</p>\n        </CardContent>\n      </Card>\n      <h3 className=\"store-headings\">Market</h3>\n      <Card className=\"store-content market\">\n        <CardContent className=\"store-items\">\n          <div>\n            <img\n              src=\"potion.png\"\n              className=\"item-img\"\n              style={{ height: \"60px\", width: \"60px\" }}\n            />\n            <section>\n              <p className=\"item-title\">Potion</p>\n              <p className=\"item-description\">+ 20 HP</p>\n            </section>\n          </div>\n          <button\n            onClick={() => {\n              if (props.hp !== 100 && props.coins >= 20) {\n                props.subtractCoinsAddHP(-20, 20);\n              } else if (props.coins < 20) {\n                alert(\"You don't have enough money\");\n              } else {\n                alert(\"Your health is already full\");\n              }\n            }}\n            className=\"buy-button\"\n          >\n            Buy\n          </button>\n        </CardContent>\n      </Card>\n      <h3 className=\"store-headings\">My Badges</h3>\n      <div className=\"badge-cards\">\n        <Card className=\"badge-card\">\n          <CardContent className=\"straw\">\n            <img\n              src={props.images[0]}\n              style={{ height: \"100px\", width: \"100px\" }}\n            />\n            <div className=\"badge-info\">\n              <p className=\"badge-title\">Straw Badge</p>\n              <p className=\"badge-description\">\n                Meet your budget 1 time in a year\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n        <Card className=\"badge-card\">\n          <CardContent className=\"stick\">\n            <img\n              src={props.images[1]}\n              style={{ height: \"100px\", width: \"100px\" }}\n            />\n\n            <div className=\"badge-info\">\n              <p className=\"badge-title\">Stick Badge</p>\n              <p className=\"badge-description\">\n                Meet your budget 3 times in a year\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n        <Card className=\"badge-card\">\n          <CardContent className=\"brick\">\n            <img\n              src={props.images[2]}\n              style={{ height: \"100px\", width: \"100px\" }}\n            />\n            <div className=\"badge-info\">\n              <p className=\"badge-title\">Brick Badge</p>\n              <p className=\"badge-description\">\n                Meet your budget 5 times in a year\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n        <Card className=\"badge-card\">\n          <CardContent className=\"wolf\">\n            <img\n              src={props.images[3]}\n              style={{ height: \"100px\", width: \"100px\" }}\n            />\n            <div className=\"badge-info\">\n              <p className=\"badge-title\">Wolf Badge</p>\n              <p className=\"badge-description\">\n                Meet your budget 10 times in a year\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n      <Navbar location={history.location.pathname.slice(1)} />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport Loading from \"./components/Loading\";\n\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Dashboard from \"./components/Dashboard\";\nimport Onboarding from \"./components/Onboarding\";\nimport Analytics from \"./components/Analytics\";\nimport Profile from \"./components/Profile\";\nimport Store from \"./components/Store\";\n\nexport default function App() {\n  const [logInStatus, setLogInStatus] = useState({\n    status: \"not_logged_in\",\n    user: \"\"\n  });\n  let lock = \"http://localhost:3000/check_badges/?badge=locked\";\n  const [refreshGoals, setRefreshGoals] = useState(false);\n  const [image, setImage] = useState([lock, lock, lock, lock]);\n  const handleLogin = data => {\n    setLogInStatus({\n      status: \"logged_in\",\n      user: data\n    });\n  };\n  let imageArray = [\n    \"http://localhost:3000/check_badges/?badge=locked\",\n    \"http://localhost:3000/check_badges/?badge=locked\",\n    \"http://localhost:3000/check_badges/?badge=locked\",\n    \"http://localhost:3000/check_badges/?badge=locked\"\n  ];\n  let countArray = [1, 3, 5, 10];\n  const clearState = () => {\n    setImage(new Set());\n  };\n  const handleLogout = data => {\n    if (!data.logged_in) {\n      setLogInStatus({\n        status: \"not_logged_in\",\n        user: \"\"\n      });\n    }\n  };\n\n  for (let count of countArray) {\n    if (count > 0 && count <= logInStatus.user.num_times_bud_met) {\n      let index = countArray.indexOf(count);\n      imageArray[index] = `http://localhost:3000/check_badges/?badge=${count}`;\n    }\n  }\n\n  function updateHealthAndCoins(coins, hp) {\n    axios.get(`http://localhost:3000/game/?coins=${coins}&hp=${hp}`, {\n      withCredentials: true\n    });\n    setLogInStatus({\n      ...logInStatus,\n      user: {\n        ...logInStatus.user,\n        coins: logInStatus.user.coins + coins,\n        hp: logInStatus.user.hp + hp\n      }\n    });\n  }\n\n  const logOutClick = () => {\n    axios\n      .delete(\"http://localhost:3000/logout\", { withCredentials: true })\n      .then(res => {\n        handleLogout(res);\n      })\n      .catch(err => console.log(\"logout error\", err));\n  };\n\n  const checkLogInStatus = () => {\n    axios\n      .get(\"http://localhost:3000/logged_in\", { withCredentials: true })\n      .then(res => {\n        if (res.data.logged_in) {\n          handleLogin(res.data.user);\n          axios\n            .get(\"http://localhost:3000/check_budget_met\", {\n              withCredentials: true\n            })\n            .then(result => {\n              setLogInStatus({\n                status: \"logged_in\",\n                user: result.data.user\n              });\n              if (result.data.user.hp === 0) {\n                alert(\"You have died\");\n                axios\n                  .put(\n                    `http://localhost:3000/game/${result.data.user.id}`,\n                    {\n                      hp: 100,\n                      coins: 0,\n                      num_times_bud_met: 0\n                    },\n                    { withCredentials: true }\n                  )\n                  .then(data => {\n                    setLogInStatus({\n                      status: \"logged_in\",\n                      user: data.data.user\n                    });\n                  });\n              }\n            })\n            .catch(e => {});\n        }\n\n        if (!res.data.logged_in && logInStatus === \"logged_in\") {\n          setLogInStatus({\n            status: \"not_logged_in\",\n            user: {}\n          });\n        }\n      })\n      .catch(err => console.log(\"check log in error\", err));\n  };\n  return (\n    <HashRouter>\n      <Switch>\n        <Route\n          path=\"/login\"\n          render={() => (\n            <Login handleLogin={handleLogin} logInStatus={logInStatus} />\n          )}\n        />\n        <Route\n          path=\"/register\"\n          render={() => <Register handleLogin={handleLogin} />}\n        />\n        <Route\n          path=\"/home\"\n          render={() => (\n            <Dashboard\n              refreshGoals={refreshGoals}\n              setRefreshGoals={setRefreshGoals}\n              checkLogInStatus={checkLogInStatus}\n              handleLogout={handleLogout}\n              logInStatus={logInStatus}\n              updateCoins={amt =>\n                setLogInStatus({\n                  ...logInStatus,\n                  user: {\n                    ...logInStatus.user,\n                    coins: amt\n                  }\n                })\n              }\n              minusHP={amt =>\n                setLogInStatus({\n                  ...logInStatus,\n                  user: {\n                    ...logInStatus.user,\n                    hp: logInStatus.user.hp - amt\n                  }\n                })\n              }\n              resetHP={amt =>\n                setLogInStatus({\n                  ...logInStatus,\n                  user: {\n                    ...logInStatus.user,\n                    hp: amt\n                  }\n                })\n              }\n            />\n          )}\n        />\n        <Route path=\"/onboarding\" render={() => <Onboarding />} />\n        <Route path=\"/analytics\" render={() => <Analytics />} />\n        <Route\n          path=\"/profile\"\n          render={() => (\n            <Profile\n              handleLogin={handleLogin}\n              logInStatus={logInStatus}\n              checkLogInStatus={checkLogInStatus}\n              logOutClick={() => logOutClick()}\n              setLoginStatus={setLogInStatus}\n            />\n          )}\n        />\n        <Route\n          path=\"/store\"\n          render={() => (\n            <Store\n              checkLogInStatus={checkLogInStatus}\n              coins={logInStatus.user.coins}\n              hp={logInStatus.user.hp}\n              subtractCoinsAddHP={(hp, coins) =>\n                updateHealthAndCoins(hp, coins)\n              }\n              budgetAchieved={logInStatus.user.num_times_bud_met}\n              images={imageArray}\n              logInStatus={logInStatus}\n            />\n          )}\n        />\n        <Route path=\"/\" render={() => <Home />} />\n      </Switch>\n    </HashRouter>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nfunction startApp() {\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\n}\n\nif (window.cordova) {\n  document.addEventListener(\"deviceready\", startApp, false);\n} else {\n  startApp();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}